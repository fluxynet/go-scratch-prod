// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// TaskHttpService is an autogenerated mock type for the TaskHttpService type
type TaskHttpService struct {
	mock.Mock
}

// Create provides a mock function with given fields: w, r
func (_m *TaskHttpService) Create(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// List provides a mock function with given fields: w, r
func (_m *TaskHttpService) List(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// ListDone provides a mock function with given fields: w, r
func (_m *TaskHttpService) ListDone(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// ListPending provides a mock function with given fields: w, r
func (_m *TaskHttpService) ListPending(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// MarkDone provides a mock function with given fields: w, r
func (_m *TaskHttpService) MarkDone(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// MarkPending provides a mock function with given fields: w, r
func (_m *TaskHttpService) MarkPending(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// Update provides a mock function with given fields: w, r
func (_m *TaskHttpService) Update(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

type mockConstructorTestingTNewTaskHttpService interface {
	mock.TestingT
	Cleanup(func())
}

// NewTaskHttpService creates a new instance of TaskHttpService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTaskHttpService(t mockConstructorTestingTNewTaskHttpService) *TaskHttpService {
	mock := &TaskHttpService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
